{"version":3,"sources":["Components/CartItem.js","Components/BuyPage.js","Components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["CartItem","product","addInCart","Card","className","CardImg","top","width","height","src","smallImage","CardBody","CardTitle","productName","CardText","productPrice","productColor","Button","color","onClick","BuyPage","useState","setProduct","fetchPhotos","a","Axios","get","data","photos","allProducts","map","photo","tinyImage","tiny","medium","commerce","price","id","v4","useEffect","Container","fluid","Row","Col","md","Cart","cartItem","removeItem","buyNow","amount","forEach","item","parseFloat","ListGroup","ListGroupItem","length","CardHeader","CardFooter","App","setCartItem","findIndex","array","toast","type","filter","individualItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5c4e9d8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst CartItem = ({ product, addInCart }) => {\r\n  return (\r\n    <Card className=\"mt-2 mb-1\">\r\n      <CardImg top width=\"100%\" height=\"250\" src={product.smallImage} />\r\n      <CardBody className=\"text-center\">\r\n        <CardTitle>{product.productName}</CardTitle>\r\n        <CardText className=\"secondary\">\r\n          Price : $ {product.productPrice}\r\n        </CardText>\r\n        <CardText className=\"secondary\">{product.productColor}</CardText>\r\n        <Button color=\"info\" onClick={() => addInCart(product)}>\r\n          BUY NOW\r\n        </Button>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// faker\r\nimport { commerce } from \"faker\";\r\n\r\n// Axios\r\nimport Axios from \"axios\";\r\n\r\n// uuid\r\nimport { v4 } from \"uuid\";\r\n\r\n// reactstrap\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst localurl =\r\n  \"https://jsonware.com/json/7f26bf2c0233a09ad8426b4e6ad9ccbd.json\";\r\n\r\nconst BuyPage = ({ addInCart }) => {\r\n  const [product, setProduct] = useState([]);\r\n\r\n  const fetchPhotos = async () => {\r\n    const { data } = await Axios.get(localurl, {});\r\n\r\n    const { photos } = data;\r\n\r\n    const allProducts = photos.map((photo) => ({\r\n      tinyImage: photo.src.tiny,\r\n      smallImage: photo.src.medium,\r\n      productName: commerce.productName(),\r\n      productPrice: commerce.price(),\r\n      productColor: commerce.color(),\r\n      id: v4(),\r\n    }));\r\n\r\n    setProduct(allProducts);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPhotos();\r\n  }, []);\r\n  return (\r\n    <Container fluid>\r\n      <h1 className=\"text-center text-info\"> BUY PAGE</h1>\r\n      <Row>\r\n        {product.map((product) => (\r\n          <Col md={4} key={product.id}>\r\n            <CartItem product={product} addInCart={addInCart} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BuyPage;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nconst Cart = ({ cartItem, removeItem, buyNow }) => {\r\n  let amount = 0;\r\n\r\n  cartItem.forEach((item) => {\r\n    amount = parseFloat(amount) + parseFloat(item.productPrice);\r\n  });\r\n  return (\r\n    <Container fluid>\r\n      <h1 className=\"text-success\"> Your Cart</h1>\r\n      <ListGroup>\r\n        {cartItem.map((item) => (\r\n          <ListGroupItem key={item.id}>\r\n            <Row>\r\n              <Col>\r\n                <img height={80} src={item.tinyImage} />\r\n              </Col>\r\n              <Col className=\"text-center\">\r\n                <div className=\"text-primary\">{item.productName}</div>\r\n                <span> Price :- {item.productPrice}</span>\r\n                <Button color=\"danger\" onClick={() => removeItem(item)}>\r\n                  Remove\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </ListGroupItem>\r\n        ))}\r\n      </ListGroup>\r\n\r\n      {/* if everything is empty */}\r\n\r\n      {cartItem.length >= 1 ? (\r\n        <Card className=\"text-center mt-3\">\r\n          <CardHeader>Grand Total</CardHeader>\r\n          <CardBody>\r\n            Your Amount for {cartItem.length} product is : {amount}\r\n          </CardBody>\r\n          <CardFooter>\r\n            <Button color=\"success\" onClick={buyNow}>\r\n              Pay Here\r\n            </Button>\r\n          </CardFooter>\r\n        </Card>\r\n      ) : (\r\n        <h1 className=\"text-warning\"> Cart is Empty </h1>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useState } from \"react\";\n\n// bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Toastify\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { toast, ToastContainer } from \"react-toastify\";\n\n// Reactstrap\nimport { Container, Row, Col } from \"reactstrap\";\n\n// Custom css\nimport \"./App.css\";\n\n// Components\nimport BuyPage from \"./Components/BuyPage\";\nimport Cart from \"./Components/Cart\";\n\nconst App = () => {\n  const [cartItem, setCartItem] = useState([]);\n\n  const addInCart = (item) => {\n    const isAlreadyAdded = cartItem.findIndex(function (array) {\n      return array.id === item.id;\n    });\n\n    if (isAlreadyAdded !== -1) {\n      return toast(\"Item is Already Added in the Cart\", {\n        type: \"warning\",\n      });\n    }\n    setCartItem([...cartItem, item]);\n  };\n\n  const buyNow = () => {\n    setCartItem([]);\n    toast(\"Successfully Purchased\", {\n      type: \"success\",\n    });\n  };\n\n  const removeItem = (item) => {\n    setCartItem(\n      cartItem.filter((individualItem) => individualItem.id !== item.id)\n    );\n  };\n  return (\n    <Container fluid>\n      <ToastContainer />\n      <Row>\n        <Col md=\"8\">\n          <BuyPage addInCart={addInCart} />\n        </Col>\n        <Col md=\"4\">\n          <Cart cartItem={cartItem} removeItem={removeItem} buyNow={buyNow} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}